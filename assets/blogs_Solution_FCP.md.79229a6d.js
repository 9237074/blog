import{_ as a,c as e,o as t,Q as r}from"./chunks/framework.3debe746.js";const b=JSON.parse('{"title":"首屏性能提升方案","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/Solution/FCP.md","filePath":"blogs/Solution/FCP.md"}'),o={name:"blogs/Solution/FCP.md"},i=r('<h1 id="首屏性能提升方案" tabindex="-1">首屏性能提升方案 <a class="header-anchor" href="#首屏性能提升方案" aria-label="Permalink to &quot;首屏性能提升方案&quot;">​</a></h1><h2 id="白屏加载和首屏加载时间的区别" tabindex="-1">白屏加载和首屏加载时间的区别 <a class="header-anchor" href="#白屏加载和首屏加载时间的区别" aria-label="Permalink to &quot;白屏加载和首屏加载时间的区别&quot;">​</a></h2><h2 id="骨架屏" tabindex="-1">骨架屏 <a class="header-anchor" href="#骨架屏" aria-label="Permalink to &quot;骨架屏&quot;">​</a></h2><h2 id="使用pwa开发可离线化应用" tabindex="-1">使用PWA开发可离线化应用 <a class="header-anchor" href="#使用pwa开发可离线化应用" aria-label="Permalink to &quot;使用PWA开发可离线化应用&quot;">​</a></h2><h2 id="客户端缓存策略" tabindex="-1">客户端缓存策略 <a class="header-anchor" href="#客户端缓存策略" aria-label="Permalink to &quot;客户端缓存策略&quot;">​</a></h2><h2 id="利用script的async和defer异步加载" tabindex="-1">利用script的async和defer异步加载 <a class="header-anchor" href="#利用script的async和defer异步加载" aria-label="Permalink to &quot;利用script的async和defer异步加载&quot;">​</a></h2><h2 id="前端资源的分块-按需加载" tabindex="-1">前端资源的分块/按需加载 <a class="header-anchor" href="#前端资源的分块-按需加载" aria-label="Permalink to &quot;前端资源的分块/按需加载&quot;">​</a></h2>',7),n=[i];function s(l,c,h,d,_,u){return t(),e("div",null,n)}const p=a(o,[["render",s]]);export{b as __pageData,p as default};
